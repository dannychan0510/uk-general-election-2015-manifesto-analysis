GDPdol <- as.integer(GDPdol)
mean(GDPdol, na.rm=TRUE)
# attach the GDP data frame
attach(GDP)
grep("^United",GDP$V4)
file.url <- 'https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv'
file.dest <- 'GDP4.csv'
download.file(file.url, file.dest, method='wget')
file.url <- 'https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv'
file.dest <- 'GDP4.csv'
download.file(file.url, file.dest, method='wget')
download.file(file.url, file.dest, method='curl')
GDP <- read.csv(file.dest, skip=4, nrows=190)
GDPdol <- gsub(",", "", GDP$X.4)
GDPdol <- as.integer(GDPdol)
mean(GDPdol, na.rm=TRUE)
attach(GDP)
grep("^United",GDP$V4)
attach(GDP)
grep("^United",GDP$V4)
grep("^United",GDP$V4)
View(GDP)
grep("^United",GDP$X.3)
grep("^United",GDP$X.3)
View(GDP)
?grep
grep("^United", GDP$X.3)
grepl("^United", GDP$X.3)
sum(grepl("^United", GDP$X.3))
file.url <- 'https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv'
file.dest <- 'GDP4.csv'
download.file(file.url, file.dest, method='curl')
GDP <- read.csv(file.dest, skip=4, nrows=190)
file.url <- 'https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv'
file.dest <- 'edu.csv'
download.file(file.url, file.dest, method='wget')
edu <- read.csv(file.dest)
GDP <- read.csv(file.dest, skip=4, nrows=190)
file.url <- 'https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv'
file.dest <- 'GDP4.csv'
download.file(file.url, file.dest, method='curl')
GDP <- read.csv(file.dest, skip=4, nrows=190)
file.url <- 'https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv'
file.dest <- 'edu.csv'
download.file(file.url, file.dest, method='curl')
edu <- read.csv(file.dest)
merged <- merge(GDP, edu, by.x = 'X', by.y = 'CountryCode')
fy.june <- grep('Fiscal year end: June', merged$Special.Notes)
length(fy.june)
install.packages('quantmod')
library(quantmod)
# load Amazon stock data
amzn = getSymbols("AMZN",auto.assign=FALSE)
# extract the index
sampleTimes = index(amzn)
# create logical for year 2012
year2012 <- grepl('2012-*', sampleTimes)
# count 2012 observations (i.e. true)
table(year2012)
# subset based on 2012
sampleTimes2012 <- subset(sampleTimes, year2012)
# convert to day of week
day <- format(sampleTimes2012, '%A')
# count each day
table(day)
?qunif
qunif(0.75,0,1)
x <- 1:4
p <- x/sum(x)
temp <- rbind(x, p)
rownames(temp) <- c("X", "Prob")
temp
x*p
sum(x*p)
((0.75*0.3)/((0.75*0.3)+(0.48*0.7)))
x <- c(0.18, -1.54, 0.42, 0.95)
w <- c(2, 1, 3, 1)
mean(x)
optimize( function(u){ sum(w*(x-u)^2) }, interval=c(-100,100))
x <- c(0.18, -1.54, 0.42, 0.95)
w <- c(2, 1, 3, 1)
optimize(function(u){ sum(w*(x-u)^2)}, interval=c(-100,100))
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
fit <- lm(y ~ x)
coeff(fit)
coefficients(fit)
> x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
> y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
> fit <- lm(y ~ x)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
fit <- lm(y ~ x)
coefficients(fit)
data(mtcars)
mtcars
fit <- lm(mpg ~ weight, data = mpf)
fit <- lm(mpg ~ weight, data = mpcars)
data <- data(mtcars)
dB <- data(mtcars)
data <- as.data.frame(data(mtcars))
data(mtcars)
dB <- as.data.frame(mtcars)
data(mtcars)
dB <- as.data.frame(mtcars)
fit <- lm(mpg ~ weight, data = dB)
View(dB)
fit <- lm(mpg ~ wt, data = dB)
coefficients(fit)
.5*.5
1.5*.4
1.5/.4
x <- c(8.58, 10.46, 9.01, 9.64, 8.86)
xn <- (x - mean(x))/sd(x)
xn
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
fit <- lm(y ~ x)
coefficients(fit)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
mean(x)
?lm
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
fit <- lm(y ~ x -1)
coefficients(fit)
corOfYandX <- 0.5
sdYoverX <- 2
beta1 <- corOfYandX*sdYoverX
beta1
?pnorm
pnorm(70, mean = 80, sd = 10)
pnorm(70, mean = 80, sd = 10, lower.tail = FALSE)
qnorm(95, mean = 1100, sd = 75)
qnorm(0.95, mean = 1100, sd = 75)
qnorm(0.95, mean = 1100, sd = 75, lower.tail = FALSE)
qnorm(0.95, mean = 1100, sd = 75, lower.tail = FALSE)
qnorm(0.95)
x <- qnorm(0.95)
(x * (75 / sqrt(100))) + 1100
?pbinom
pbinom(4, 5, 0.5)
pbinom(1, 5, 0.5)
pbinom(5, 5, 0.5)
pbinom(5, 5, 0.5)
pbinom(4, 5, 0.5)
pbinom(4, 5, 0.5, lower.tail = FALSE)
pbinom(3, 5, 0.5, lower.tail = FALSE)
choose(5,4) * 0.5^5 + choose(5,5) * 0.5^5
x <- ((14 - 15) / (10 / sqrt(100)))
y <- ((16 - 15) / (10 / sqrt(100)))
pnorm(y) - pnorm(x)
?runif
runif(10)
mean(runif(100))
mean(runif(1000))
mean(runif(100000000))
mean(runif(1000))
1/sqrt(2)
x <- 1/sqrt(2)
y <- 1 - x
mean(runif(1000, max = x, min = y))
mean(runif(1000, max = x, min = y))
?ppois
ppois(5, 3)
ppois(10, lambda = 5 * 3)
x <- c(0.61, 0.93, 0.83, 0.35, 0.54, 0.16, 0.91, 0.62, 0.62)
y <- c(0.67, 0.84, 0.6, 0.18, 0.85, 0.47, 1.1, 0.65, 0.36)
fit <- lm(x ~ y)
?lm
summary(fit)
x <- c(0.61, 0.93, 0.83, 0.35, 0.54, 0.16, 0.91, 0.62, 0.62)
y <- c(0.67, 0.84, 0.6, 0.18, 0.85, 0.47, 1.1, 0.65, 0.36)
fit <- lm(x ~ y)
summary(fit)
residuals(fit)
sd(residuals(fit))
x <- c(0.61, 0.93, 0.83, 0.35, 0.54, 0.16, 0.91, 0.62, 0.62)
y <- c(0.67, 0.84, 0.6, 0.18, 0.85, 0.47, 1.1, 0.65, 0.36)
fit <- lm(y ~ x)
summary(fit)
dB <- data(mtcars)
data(mtcars)
dB <- as.data.frame(data(mtcars))
?mtcars
mtcars
dB <- as.data.frame(mtcars)
fit <- lm(mpg ~ weight, data = dB)
View(dB)
fit <- lm(mpg ~ wt, data = dB)
mean(dB$wt)
?predict
predict(fit, mean(dB$wt))
predict(fit, mean(dB$wt), interval = "confidence")
dB <- as.data.frame(mtcars)
fit <- lm(mpg ~ wt, data = dB)
predict(fit, mean(dB$wt), interval = "confidence")
predict(fit, as.data.frame(mean(dB$wt)), interval = "confidence")
fit <- lm(mpg ~ wt, data = dB)
predict(fit, newdata = as.data.frame(mean(dB$wt)), interval = "confidence")
predict(fit,data.frame(x=mean(x)), interval="confidence")
dB <- as.data.frame(mtcars)
fit <- lm(mpg ~ wt, data = dB)
predict(fit, newdata = as.data.frame(mean(dB$wt)), interval = "confidence")
predict(fit, newdata = as.data.frame(mean(wt)), interval = "confidence")
predict(fit, 3.21725, interval = "confidence")
dB <- as.data.frame(mtcars)
fit <- lm(mpg ~ wt, data = dB)
x<-mtcars$wt
y<-mtcars$mpg
fit<-lm(y ~ x)
predict(fit,data.frame(x=mean(x)), interval="confidence")
predict(fit, mean(dB$wt), interval = "confidence")
predict(fit, mean(dB$wt), interval = "confidence")
dB <- as.data.frame(mtcars)
fit <- lm(mpg ~ wt, data = dB)
predict(fit, mean(dB$wt), interval = "confidence")
predict(fit, data.frame(mean(dB$wt), interval = "confidence")
predict(fit, data.frame(mean(dB$wt), interval = "confidence"))
predict(fit, data.frame(mean(dB$wt), interval = "confidence"))
predict(fit, data.frame(mean(x = dB$wt), interval = "confidence"))
predict(fit, data.frame(mean(x = mean(x)), interval = "confidence"))
mean <- mean(dB$wt)
predict(fit, mean, interval = "confidence"))
predict(fit, mean, interval = "confidence")
dB <- as.data.frame(mtcars)
fit <- lm(mpg ~ wt, data = dB)
mean <- mean(dB$wt)
predict(fit, mean, interval = "confidence")
dB <- as.data.frame(mtcars)
fit <- lm(mpg ~ wt, data = dB)
mean <- mean(dB$wt)
predict(fit, mean, interval = "confidence")
mean <- data.frame(x = c(mean(dB$wt)))
View(dB)
View(mean)
predict(fit, mean, interval = "confidence")
dB <- as.data.frame(mtcars)
fit <- lm(mpg ~ wt, data = dB)
mean <- data.frame(x = c(mean(dB$wt)))
predict(fit, mean, interval = "confidence")
mean <- data.frame(c(mean(dB$wt)))
predict(fit, mean, interval = "confidence")
x <- mtcars$wt
y <- mtcars$mpg
fit <- lm(y ~ x)
coef <- summary(fit)$coefficients
newdata <- data.frame(x=c(mean(x)))
p1 <- predict(fit, newdata, interval = ("confidence"))
predict(fit, newdata, interval = ("confidence"))
newdata <- data.frame(x=c(mean(x)))
View(newdata)
View(mean)
View(newdata)
View(mean)
predict(fit, newdata, interval = "confidence")
predict(fit, mean, interval = "confidence")
predict(fit, data.fram(mean(dB$wt)), interval = "confidence")
predict(fit, data.frame(mean(dB$wt)), interval = "confidence")
predict(fit, data.frame(mean(dB$wt)), interval = "confidence")
fit <- lm(mpg ~ wt, data = dB)
predict(fit, data.frame(mean(dB$wt)), interval = "confidence")
View(dB)
dB$wt
mean(dB$wt)
data.fram(mean(dB$wt))
x <- data.fram(mean(dB$wt))
x <- data.fram(mean(dB$wt))
x <- data.frame(mean(dB$wt))
x <- data.frame(x = mean(dB$wt))
predict(fit, x, interval = "confidence")
predict(fit, x, interval = "confidence")
predict(fit, x, interval = "confidence")
predict(fit, x, interval = "confidence")
newdata <- data.frame(wt=mean(mtcars$wt))
predict(fit, newdata, interval = ("confidence"))
newdata <- data.frame(wt = mean(mtcars$wt))
predict(fit, newdata, interval = ("confidence"))
dB <- as.data.frame(mtcars)
fit <- lm(mpg ~ wt, data = dB)
newdata <- data.frame(x = mean(mtcars$wt))
predict(fit, newdata, interval = ("confidence"))
newdata <- data.frame(wt = mean(mtcars$wt))
predict(fit, newdata, interval = ("confidence"))
dB <- as.data.frame(mtcars)
fit <- lm(mpg ~ wt, data = dB)
newdata <- data.frame(wt = mean(mtcars$wt))
predict(fit, newdata, interval = ("confidence"))
?mtcars
dB <- as.data.frame(mtcars)
fit <- lm(mpg ~ wt, data = dB)
dB <- as.data.frame(mtcars)
fit <- lm(mpg ~ wt, data = dB)
newdata <- data.frame(wt = 3)
predict(fit, newdata, interval = ("confidence"))
?predict
dB <- as.data.frame(mtcars)
fit <- lm(mpg ~ wt, data = dB)
newdata <- data.frame(wt = 3)
predict(fit, newdata, interval = ("prediction"))
dB <- as.data.frame(mtcars)
fit <- lm(mpg ~ wt*2, data = dB)
dB <- as.data.frame(mtcars)
fit <- lm(mpg ~ wt*2, data = dB)
fit <- lm(mpg ~ (wt*2), data = dB)
fit <- lm(mpg ~ (wt*2), data = dB)
dB <- as.data.frame(mtcars)
fit <- lm(mpg ~ I(wt*2), data = dB)
fit
summary(fit)
fit <- lm(mpg ~ I(wt/2), data = dB)
summary(fit)$coefficients
summary(fit)$coefficients
dB <- as.data.frame(mtcars)
fit <- lm(mpg ~ I(wt/2), data = dB)
summary(fit)$coefficients
sumCoef <- summary(fit)$coefficients
sumCoef[2,1] + c(-1, 1) * qt(.95, df = fit$df) * sumCoef[2, 2]
sumCoef[2,1] + c(-1, 1) * qt(.975, df = fit$df) * sumCoef[2, 2]
dB <- as.data.frame(mtcars)
fit <- lm(mpg ~ I(wt/2), data = dB)
summary(fit)$coefficients
sumCoef <- summary(fit)$coefficients
sumCoef[2,1] + c(-1, 1) * qt(.975, df = fit$df) * sumCoef[2, 2]
?qt
interceptOnly <- lm(mpg ~ 1, data = dB)
interceptAndSlope <- lm(mpg ~ wt, data = dB)
summary(interceptOnly)
anova(interceptOnly)
anova(interceptOnly)[2]
anova(interceptAndSlope)[2] / anova(interceptOnly)[2]
anova(interceptAndSlope)[[2]] / anova(interceptOnly)[[2]]
anova(interceptAndSlope)[[2]]
anova(interceptAndSlope)[[2]]
anova(interceptAndSlope)
anova(interceptAndSlope)[[2, 1]]
anova(interceptAndSlope)[[1, 2]]
anova(interceptAndSlope)[[1, 2]] / anova(interceptOnly)[[2]]
dB <- as.data.frame(mtcars)
interceptOnly <- lm(mpg ~ 1, data = dB)
interceptAndSlope <- lm(mpg ~ wt, data = dB)
anova(interceptAndSlope)[[1, 2]] / anova(interceptOnly)[[2]]
dB <- as.data.frame(mtcars)
interceptOnly <- lm(mpg ~ 1, data = dB)
interceptAndSlope <- lm(mpg ~ wt, data = dB)
anova(interceptAndSlope)
anova(interceptOnly)
anova(interceptAndSlope)[[2, 2]] / anova(interceptOnly)[[2]]
dB <- as.data.frame(mtcars)
interceptOnly <- lm(mpg ~ 1, data = dB)
interceptAndSlope <- lm(mpg ~ wt, data = dB)
anova(interceptAndSlope)[[2, 2]] / anova(interceptOnly)[[2]]
mns = NULL
for (i in 1 : 1000) mns = c(mns, mean(runif(40)))
hist(mns)
hist(runif(1000))
mns = NULL
for (i in 1 : 1000) mns = c(mns, mean(rexp(40, 5)))
hist(mns)
mns = NULL
for (i in 1 : 1000) mns = c(mns, mean(rexp(40, 5)))
hist(mns)
nosim <- 1000
cfunc <- function(x, n) sqrt(n) * (mean(x) - 3.5) / 1.71
dat <- data.frame(
x = c(apply(matrix(sample(1 : 6, nosim * 10, replace = TRUE),
nosim), 1, cfunc, 10),
apply(matrix(sample(1 : 6, nosim * 20, replace = TRUE),
nosim), 1, cfunc, 20),
apply(matrix(sample(1 : 6, nosim * 30, replace = TRUE),
nosim), 1, cfunc, 30)
),
size = factor(rep(c(10, 20, 30), rep(nosim, 3))))
g <- ggplot(dat, aes(x = x, fill = size)) + geom_histogram(alpha = .20, binwidth=.3, colour = "black", aes(y = ..density..))
g <- g + stat_function(fun = dnorm, size = 2)
g + facet_grid(. ~ size)
library(ggplot2)
nosim <- 1000
cfunc <- function(x, n) sqrt(n) * (mean(x) - 3.5) / 1.71
dat <- data.frame(
x = c(apply(matrix(sample(1 : 6, nosim * 10, replace = TRUE),
nosim), 1, cfunc, 10),
apply(matrix(sample(1 : 6, nosim * 20, replace = TRUE),
nosim), 1, cfunc, 20),
apply(matrix(sample(1 : 6, nosim * 30, replace = TRUE),
nosim), 1, cfunc, 30)
),
size = factor(rep(c(10, 20, 30), rep(nosim, 3))))
g <- ggplot(dat, aes(x = x, fill = size)) + geom_histogram(alpha = .20, binwidth=.3, colour = "black", aes(y = ..density..))
g <- g + stat_function(fun = dnorm, size = 2)
g + facet_grid(. ~ size)
nosim <- 1000
cfunc <- function(x, n) 2 * sqrt(n) * (mean(x) - 0.5)
dat <- data.frame(
x = c(apply(matrix(sample(0:1, nosim * 10, replace = TRUE),
nosim), 1, cfunc, 10),
apply(matrix(sample(0:1, nosim * 20, replace = TRUE),
nosim), 1, cfunc, 20),
apply(matrix(sample(0:1, nosim * 30, replace = TRUE),
nosim), 1, cfunc, 30)
),
size = factor(rep(c(10, 20, 30), rep(nosim, 3))))
g <- ggplot(dat, aes(x = x, fill = size)) + geom_histogram(binwidth=.3, colour = "black", aes(y = ..density..))
g <- g + stat_function(fun = dnorm, size = 2)
g + facet_grid(. ~ size)
nosim <- 1000
cfunc <- function(x, n) sqrt(n) * (mean(x) - 3.5) / 1.71
dat <- data.frame(
x = c(apply(matrix(sample(1 : 6, nosim * 10, replace = TRUE),
nosim), 1, cfunc, 10),
apply(matrix(sample(1 : 6, nosim * 20, replace = TRUE),
nosim), 1, cfunc, 20),
apply(matrix(sample(1 : 6, nosim * 30, replace = TRUE),
nosim), 1, cfunc, 30)
),
size = factor(rep(c(10, 20, 30), rep(nosim, 3))))
g <- ggplot(dat, aes(x = x, fill = size)) + geom_histogram(alpha = .20, binwidth=.3, colour = "black", aes(y = ..density..))
g <- g + stat_function(fun = dnorm, size = 2)
g + facet_grid(. ~ size)
View(dat)
nosim <- 1000
cfunc <- function(x, n) sqrt(n) * (mean(x) - 3.5) / 1.71
dat <- data.frame(
x = c(apply(matrix(sample(1 : 6, nosim * 10, replace = TRUE),
nosim), 1, cfunc, 10),
),
size = factor(rep(c(10, 20, 30), rep(nosim, 3))))
g <- ggplot(dat, aes(x = x, fill = size)) + geom_histogram(alpha = .20, binwidth=.3, colour = "black", aes(y = ..density..))
g <- g + stat_function(fun = dnorm, size = 2)
g + facet_grid(. ~ size)
nosim <- 1000
cfunc <- function(x, n) 2 * sqrt(n) * (mean(x) - 0.5)
dat <- data.frame(
x = c(apply(matrix(sample(0:1, nosim * 10, replace = TRUE),
nosim), 1, cfunc, 10),
apply(matrix(sample(0:1, nosim * 20, replace = TRUE),
nosim), 1, cfunc, 20),
apply(matrix(sample(0:1, nosim * 30, replace = TRUE),
nosim), 1, cfunc, 30)
),
size = factor(rep(c(10, 20, 30), rep(nosim, 3))))
View(dat)
size = factor(rep(c(10, 20, 30), rep(nosim, 3))))
View(dat)
g <- ggplot(dat, aes(x = x, fill = size)) + geom_histogram(binwidth=.3, colour = "black", aes(y = ..density..))
g <- g + stat_function(fun = dnorm, size = 2)
g + facet_grid(. ~ size)
mns = NULL
for (i in 1 : 1000) mns = c(mns, mean(runif(40)))
mns
hist(mns)
mns = NULL
for (i in 1 : 1000) mns = c(mns, sd(runif(40)))
hist(mns)
setwd("~/Desktop/Test")
dest <- "~/Desktop/Test"
myfiles <- list.files(path = dest, pattern = "pdf",  full.names = TRUE)
lapply(myfiles, function(i) system(paste('"/Users/dannychan0510/Desktop/xpdfbin-mac-3.04/bin64/pdftotext"', paste0('"', i, '"')), wait = FALSE) )
greenparty <- readChar("Green Party Manifesto 2015.txt")
greenparty <- readChar("Green Party Manifesto 2015.txt", nchars = 1000000000000)
greenparty <- readChar("Green Party Manifesto 2015.txt", nchars=1e6))
greenparty <- readChar("Green Party Manifesto 2015.txt", nchars=1e6))
filename <- "Green Party Manifesto 2015.tx"
filename <- "Green Party Manifesto 2015.txt"
green <- readChar(filename, file.info(filename)$size)
green <- readChar(filename, file.info(filename)$size)
lapply(myfiles, function(i) system(paste('"/Users/dannychan0510/Desktop/xpdfbin-mac-3.04/bin64/pdftotext"', paste0('"', i, '"')), wait = FALSE) )
> filename <- "Green Party Manifesto 2015.txt"
filename <- "Green Party Manifesto 2015.txt"
greenparty <- readChar("Green Party Manifesto 2015.txt", nchars=1e6))
greenparty <- readChar("Green Party Manifesto 2015.txt", nchars=1e6)
greenparty <- readChar("Green Party Manifesto 2015.txt", nchars=1e6, useBytes = TRUE)
greenparty <- iconv(enc2utf8(greenparty), sub="byte")
myfiles <- list.files(path = "~/Documents/GitHub/uk-general-election-2015-manifesto-analysis/Manifesto", pattern = "pdf",  full.names = TRUE)
myfiles <- list.files(path = "~/Documents/GitHub/uk-general-election-2015-manifesto-analysis/Manifesto", pattern = "pdf",  full.names = TRUE)
setwd("~/Documents/GitHub/uk-general-election-2015-manifesto-analysis")
myfiles <- list.files(path = "~/Documents/GitHub/uk-general-election-2015-manifesto-analysis/Manifesto", pattern = "pdf",  full.names = TRUE)
myfiles <- list.files(path = dest, pattern = "pdf",  full.names = TRUE)
lapply(myfiles, function(i) system(paste('"/Users/dannychan0510/Documents/GitHub/uk-general-election-2015-manifesto-analysis/xpdfbin-mac-3.04/bin64/pdftotext"', paste0('"', i, '"')), wait = FALSE) )
setwd("~/Documents/GitHub/uk-general-election-2015-manifesto-analysis")
dest <- "~/Documents/GitHub/uk-general-election-2015-manifesto-analysis"
myfiles <- list.files(path = dest, pattern = "pdf",  full.names = TRUE)
lapply(myfiles, function(i) system(paste('"/Users/dannychan0510/Documents/GitHub/uk-general-election-2015-manifesto-analysis/xpdfbin-mac-3.04/bin64/pdftotext"', paste0('"', i, '"')), wait = FALSE) )
dest <- "~/Documents/GitHub/uk-general-election-2015-manifesto-analysis"
myfiles <- list.files(path = dest, pattern = "pdf",  full.names = TRUE)
lapply(myfiles, function(i) system(paste('"/Users/dannychan0510/Documents/GitHub/uk-general-election-2015-manifesto-analysis/xpdfbin-mac-3.04/bin64/pdftotext"', paste0('"', i, '"')), wait = FALSE))
myfiles <- list.files(path = dest, pattern = "pdf",  full.names = TRUE)
dest <- "~/Documents/GitHub/uk-general-election-2015-manifesto-analysis/Manifestos"
myfiles <- list.files(path = dest, pattern = "pdf",  full.names = TRUE)
lapply(myfiles, function(i) system(paste('"/Users/dannychan0510/Documents/GitHub/uk-general-election-2015-manifesto-analysis/xpdfbin-mac-3.04/bin64/pdftotext"', paste0('"', i, '"')), wait = FALSE))
# Set file paths of the manifestos
conservatives <- 'Manifestos/Conservatives Manifesto 2015.txt'
labour <- 'Manifestos/Labour Manifesto 2015.txt'
libdem <- 'Manifestos/Lib Dem Manifesto 2015.txt'
greenparty <- 'Manifestos/Green Party Manifesto 2015.txt'
ukip <- 'Manifestos/UKIP Manifesto 2015.txt'
# Reading in manifesto text
conservatives <- readChar(conservatives, file.info(libdem)$size, useBytes = TRUE)
labour <- readChar(labour, file.info(labour)$size, useBytes = TRUE)
libdem <- readChar(libdem, file.info(libdem)$size, useBytes = TRUE)
greenparty <- readChar(greenparty, file.info(greenparty)$size, useBytes = TRUE)
ukip <- readChar(ukip, file.info(ukip)$size, useBytes = TRUE)
conservatives <- iconv(enc2utf8(conservatives), sub="byte")
labour <- iconv(enc2utf8(labour), sub="byte")
libdem <- iconv(enc2utf8(libdem), sub="byte")
greenparty <- iconv(enc2utf8(greenparty), sub="byte")
ukip <- iconv(enc2utf8(ukip), sub="byte")
strcount <- function(x, pattern, split){
unlist(lapply(strsplit(x, split),function(z) na.omit(length(grep(pattern, z)))))
}
strcount(tolower(libdem), "nhs", " ")
strcount(tolower(conservatives), "nhs", " ")
